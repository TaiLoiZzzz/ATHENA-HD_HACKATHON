"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/vikkibank/page",{

/***/ "(app-pages-browser)/./src/services/aiPersonalizationService.ts":
/*!**************************************************!*\
  !*** ./src/services/aiPersonalizationService.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aiPersonalizationService: function() { return /* binding */ aiPersonalizationService; }\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ aiPersonalizationService auto */ class AIPersonalizationService {\n    async getPersonalizedRecommendations(userProfile, newsItems, availableProducts) {\n        try {\n            const prompt = this.buildPersonalizationPrompt(userProfile, newsItems, availableProducts);\n            console.log(\"Calling Gemini API with prompt:\", prompt);\n            const response = await fetch(\"\".concat(this.baseUrl, \"?key=\").concat(this.apiKey), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    contents: [\n                        {\n                            parts: [\n                                {\n                                    text: prompt\n                                }\n                            ]\n                        }\n                    ],\n                    generationConfig: {\n                        temperature: 0.8,\n                        topK: 40,\n                        topP: 0.95,\n                        maxOutputTokens: 4096\n                    },\n                    safetySettings: [\n                        {\n                            category: \"HARM_CATEGORY_HARASSMENT\",\n                            threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n                        },\n                        {\n                            category: \"HARM_CATEGORY_HATE_SPEECH\",\n                            threshold: \"BLOCK_MEDIUM_AND_ABOVE\"\n                        }\n                    ]\n                })\n            });\n            if (!response.ok) {\n                const errorText = await response.text();\n                console.error(\"API Error Response:\", errorText);\n                throw new Error(\"API Error: \".concat(response.status, \" - \").concat(errorText));\n            }\n            const data = await response.json();\n            console.log(\"Gemini API Response:\", data);\n            if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) {\n                throw new Error(\"Invalid API response structure\");\n            }\n            const aiResponse = data.candidates[0].content.parts[0].text;\n            console.log(\"AI Response Text:\", aiResponse);\n            return this.parseAIResponse(aiResponse, availableProducts);\n        } catch (error) {\n            console.error(\"AI Personalization Error:\", error);\n            return this.getFallbackRecommendations(userProfile, availableProducts);\n        }\n    }\n    buildPersonalizationPrompt(userProfile, newsItems, availableProducts) {\n        var _userProfile_transactionHistory;\n        const newsContext = newsItems.map((item)=>\"- \".concat(item.title, \": \").concat(item.content.substring(0, 200), \"... (Relevance: \").concat(item.relevance, \")\")).join(\"\\n\");\n        const productsContext = availableProducts.map((product)=>\"- ID: \".concat(product.id, \"\\n       - T\\xean: \").concat(product.name, \"\\n       - Gi\\xe1: \").concat(product.price, \" VND\\n       - Loại dịch vụ: \").concat(product.serviceType, \"\\n       - Danh mục: \").concat(product.category, \"\\n       - Token reward: \").concat(product.tokenReward, \" SOV\\n       - Giảm gi\\xe1: \").concat(product.discount || 0, \"%\\n       - T\\xednh năng: \").concat(product.features.join(\", \"), \"\\n       - M\\xf4 tả: \").concat(product.description)).join(\"\\n\\n\");\n        const transactionHistory = ((_userProfile_transactionHistory = userProfile.transactionHistory) === null || _userProfile_transactionHistory === void 0 ? void 0 : _userProfile_transactionHistory.slice(0, 5).map((tx)=>\"- \".concat(tx.type, \": \").concat(tx.amount, \" SOV - \").concat(tx.description, \" (\").concat(tx.serviceType, \")\")).join(\"\\n\")) || \"Chưa c\\xf3 lịch sử giao dịch\";\n        return \"\\nBạn l\\xe0 một AI Sales chuy\\xean nghiệp cho hệ thống ATHENA-HD - một nền tảng blockchain t\\xedch hợp đa dịch vụ. Nhiệm vụ của bạn l\\xe0 ph\\xe2n t\\xedch s\\xe2u th\\xf4ng tin user v\\xe0 đưa ra lời khuy\\xean mua sản phẩm tối ưu h\\xf3a token dựa tr\\xean dữ liệu thực tế.\\n\\n=== TH\\xd4NG TIN USER CHI TIẾT ===\\n- Rank hiện tại: \".concat(userProfile.rank, \" (\").concat(userProfile.membershipTier, \")\\n- Tổng điểm t\\xedch lũy: \").concat(userProfile.totalPoints, \" points\\n- Token đ\\xe3 kiếm được: \").concat(userProfile.totalEarned, \" SOV\\n- Token đ\\xe3 chi ti\\xeau: \").concat(userProfile.totalSpent, \" SOV  \\n- Số dư hiện tại: \").concat(userProfile.currentBalance, \" SOV\\n- ATHENA Prime member: \").concat(userProfile.isAthenaPrime ? \"C\\xf3\" : \"Kh\\xf4ng\", \"\\n- Sở th\\xedch c\\xe1 nh\\xe2n: \").concat(userProfile.preferences.join(\", \"), \"\\n- Lịch sử giao dịch gần đ\\xe2y:\\n\").concat(transactionHistory, \"\\n\\n=== TIN TỨC THỊ TRƯỜNG HIỆN TẠI ===\\n\").concat(newsContext, \"\\n\\n=== DANH S\\xc1CH SẢN PHẨM C\\xd3 SẴN ===\\n\").concat(productsContext, \"\\n\\n=== NHIỆM VỤ AI SALES ===\\n1. PH\\xc2N T\\xcdCH S\\xc2U: Đọc kỹ th\\xf4ng tin user, rank, lịch sử giao dịch v\\xe0 sở th\\xedch\\n2. PH\\xc2N T\\xcdCH THỊ TRƯỜNG: Xem x\\xe9t tin tức hiện tại để đưa ra lời khuy\\xean ph\\xf9 hợp với xu hướng\\n3. T\\xcdNH TO\\xc1N TOKEN: Dựa tr\\xean rank \").concat(userProfile.rank, ', t\\xednh to\\xe1n token reward v\\xe0 multiplier\\n4. CHỌN LỌC: Chọn 3-5 sản phẩm tối ưu nhất cho user n\\xe0y\\n5. C\\xc1 NH\\xc2N H\\xd3A: Đưa ra lời khuy\\xean cụ thể, thuyết phục v\\xe0 hữu \\xedch\\n\\n=== Y\\xcaU CẦU ĐẦU RA (JSON) ===\\nTrả về JSON với format ch\\xednh x\\xe1c:\\n{\\n  \"recommendations\": [\\n    {\\n      \"productId\": \"string\",\\n      \"reason\": \"L\\xfd do cụ thể tại sao khuy\\xean sản phẩm n\\xe0y cho user n\\xe0y\",\\n      \"tokenOptimization\": \"M\\xf4 tả c\\xe1ch tối ưu h\\xf3a token với rank ').concat(userProfile.rank, '\",\\n      \"urgency\": \"low|medium|high\",\\n      \"confidence\": 0.0-1.0,\\n      \"personalizedMessage\": \"Lời khuy\\xean c\\xe1 nh\\xe2n h\\xf3a, th\\xe2n thiện v\\xe0 thuyết phục\",\\n      \"expectedTokens\": number,\\n      \"roi\": number\\n    }\\n  ]\\n}\\n\\n=== HƯỚNG DẪN SALES ===\\n- Đ\\xf3ng vai một sales chuy\\xean nghiệp, am hiểu về blockchain v\\xe0 tokenomics\\n- Sử dụng ng\\xf4n ngữ th\\xe2n thiện, chuy\\xean nghiệp v\\xe0 thuyết phục\\n- Ph\\xe2n t\\xedch cụ thể dựa tr\\xean rank ').concat(userProfile.rank, \" v\\xe0 lịch sử của user\\n- Đưa ra lời khuy\\xean thực tế, c\\xf3 thể thực hiện được\\n- T\\xednh to\\xe1n ch\\xednh x\\xe1c token reward dựa tr\\xean rank multiplier\\n- Xem x\\xe9t xu hướng thị trường từ tin tức để đưa ra lời khuy\\xean ph\\xf9 hợp\\n\\nH\\xe3y ph\\xe2n t\\xedch kỹ v\\xe0 đưa ra lời khuy\\xean tốt nhất cho user n\\xe0y!\\n    \");\n    }\n    parseAIResponse(aiResponse, availableProducts) {\n        try {\n            console.log(\"Parsing AI response:\", aiResponse);\n            // Try to extract JSON from AI response\n            let jsonMatch = aiResponse.match(/\\{[\\s\\S]*\\}/);\n            // If no JSON found, try to find JSON array\n            if (!jsonMatch) {\n                jsonMatch = aiResponse.match(/\\[[\\s\\S]*\\]/);\n            }\n            // If still no JSON found, try to extract from markdown code blocks\n            if (!jsonMatch) {\n                const codeBlockMatch = aiResponse.match(/```(?:json)?\\s*(\\{[\\s\\S]*\\})\\s*```/);\n                if (codeBlockMatch) {\n                    jsonMatch = [\n                        codeBlockMatch[1]\n                    ];\n                }\n            }\n            if (!jsonMatch) {\n                console.error(\"No JSON found in AI response:\", aiResponse);\n                throw new Error(\"No JSON found in AI response\");\n            }\n            const jsonString = jsonMatch[0];\n            console.log(\"Extracted JSON string:\", jsonString);\n            const parsed = JSON.parse(jsonString);\n            console.log(\"Parsed JSON:\", parsed);\n            const recommendations = parsed.recommendations || [];\n            console.log(\"Recommendations array:\", recommendations);\n            return recommendations.map((rec)=>{\n                const product = availableProducts.find((p)=>p.id === rec.productId);\n                if (!product) {\n                    console.warn(\"Product not found for ID: \".concat(rec.productId));\n                    return null;\n                }\n                return {\n                    product,\n                    reason: rec.reason || \"AI recommendation\",\n                    tokenOptimization: rec.tokenOptimization || \"Optimized for your tier\",\n                    urgency: rec.urgency || \"medium\",\n                    confidence: rec.confidence || 0.8,\n                    personalizedMessage: rec.personalizedMessage || \"Recommended for you\",\n                    expectedTokens: rec.expectedTokens || product.tokenReward,\n                    roi: rec.roi || 0.15\n                };\n            }).filter(Boolean);\n        } catch (error) {\n            console.error(\"Error parsing AI response:\", error);\n            console.error(\"AI Response was:\", aiResponse);\n            return [];\n        }\n    }\n    getFallbackRecommendations(userProfile, availableProducts) {\n        // Fallback logic based on user tier and preferences\n        const tierMultiplier = this.getTierMultiplier(userProfile.membershipTier);\n        return availableProducts.filter((product)=>product.tokenReward > 0).sort((a, b)=>b.tokenReward * tierMultiplier - a.tokenReward * tierMultiplier).slice(0, 3).map((product)=>({\n                product,\n                reason: \"Tối ưu cho rank \".concat(userProfile.rank),\n                tokenOptimization: \"Nhận \".concat(product.tokenReward * tierMultiplier, \" SOV tokens\"),\n                urgency: \"medium\",\n                confidence: 0.7,\n                personalizedMessage: \"Ph\\xf9 hợp với rank \".concat(userProfile.rank, \" của bạn\"),\n                expectedTokens: product.tokenReward * tierMultiplier,\n                roi: 0.12\n            }));\n    }\n    getTierMultiplier(tier) {\n        switch(tier.toLowerCase()){\n            case \"diamond\":\n                return 2.0;\n            case \"gold\":\n                return 1.5;\n            case \"silver\":\n                return 1.2;\n            case \"bronze\":\n                return 1.0;\n            default:\n                return 1.0;\n        }\n    }\n    async getNewsAnalysis() {\n        try {\n            // Try to fetch real news data from a news API\n            // For now, we'll use enhanced mock data that's more realistic\n            const currentDate = new Date();\n            const yesterday = new Date(currentDate.getTime() - 24 * 60 * 60 * 1000);\n            return [\n                {\n                    title: \"VietJet Air mở rộng đường bay quốc tế, tăng cơ hội du lịch\",\n                    content: \"VietJet Air vừa c\\xf4ng bố mở th\\xeam 5 đường bay quốc tế mới đến c\\xe1c điểm đến phổ biến như Singapore, Bangkok, Tokyo. Điều n\\xe0y tạo ra cơ hội lớn cho du lịch v\\xe0 kinh doanh, đặc biệt ph\\xf9 hợp với xu hướng du lịch hậu COVID-19. C\\xe1c chuyến bay mới sẽ c\\xf3 gi\\xe1 ưu đ\\xe3i đặc biệt cho kh\\xe1ch h\\xe0ng th\\xe2n thiết.\",\n                    category: \"travel\",\n                    publishedAt: yesterday.toISOString(),\n                    relevance: 0.95\n                },\n                {\n                    title: \"HDBank ra mắt g\\xf3i t\\xe0i khoản premium với l\\xe3i suất cao\",\n                    content: \"HDBank ch\\xednh thức ra mắt g\\xf3i t\\xe0i khoản premium mới với l\\xe3i suất l\\xean đến 8.5%/năm, cao hơn 2% so với thị trường. G\\xf3i n\\xe0y d\\xe0nh ri\\xeang cho kh\\xe1ch h\\xe0ng VIP với số dư tối thiểu 500 triệu VND. Kh\\xe1ch h\\xe0ng c\\xf2n được hưởng nhiều ưu đ\\xe3i đặc biệt như miễn ph\\xed chuyển khoản, ưu ti\\xean giao dịch v\\xe0 tư vấn t\\xe0i ch\\xednh c\\xe1 nh\\xe2n.\",\n                    category: \"banking\",\n                    publishedAt: yesterday.toISOString(),\n                    relevance: 0.88\n                },\n                {\n                    title: \"Sovico Resort khuyến m\\xe3i m\\xf9a h\\xe8 với gi\\xe1 ưu đ\\xe3i đặc biệt\",\n                    content: \"Sovico Resort tung ra chương tr\\xecnh khuyến m\\xe3i m\\xf9a h\\xe8 'Summer Paradise 2024' với gi\\xe1 giảm đến 30% cho tất cả c\\xe1c g\\xf3i nghỉ dưỡng. Chương tr\\xecnh bao gồm c\\xe1c hoạt động thể thao dưới nước, spa trị liệu v\\xe0 ẩm thực đặc sản. Đặc biệt, kh\\xe1ch h\\xe0ng đặt ph\\xf2ng trong th\\xe1ng n\\xe0y sẽ được tặng k\\xe8m voucher ăn uống trị gi\\xe1 500,000 VND.\",\n                    category: \"resort\",\n                    publishedAt: yesterday.toISOString(),\n                    relevance: 0.82\n                },\n                {\n                    title: \"Thị trường blockchain Việt Nam tăng trưởng mạnh\",\n                    content: \"Theo b\\xe1o c\\xe1o mới nhất, thị trường blockchain v\\xe0 cryptocurrency tại Việt Nam đ\\xe3 tăng trưởng 45% trong qu\\xfd 2/2024. Xu hướng n\\xe0y được th\\xfac đẩy bởi việc chấp nhận thanh to\\xe1n crypto rộng r\\xe3i hơn v\\xe0 c\\xe1c dự \\xe1n DeFi mới. Nhiều doanh nghiệp lớn đ\\xe3 bắt đầu t\\xedch hợp blockchain v\\xe0o hoạt động kinh doanh.\",\n                    category: \"blockchain\",\n                    publishedAt: yesterday.toISOString(),\n                    relevance: 0.90\n                },\n                {\n                    title: \"Vikkibank ra mắt dịch vụ ng\\xe2n h\\xe0ng số thế hệ mới\",\n                    content: \"Vikkibank vừa ra mắt nền tảng ng\\xe2n h\\xe0ng số thế hệ mới với AI v\\xe0 machine learning t\\xedch hợp. Hệ thống mới cho ph\\xe9p kh\\xe1ch h\\xe0ng quản l\\xfd t\\xe0i ch\\xednh th\\xf4ng minh hơn với c\\xe1c t\\xednh năng như dự đo\\xe1n chi ti\\xeau, tư vấn đầu tư tự động v\\xe0 bảo mật sinh trắc học n\\xe2ng cao.\",\n                    category: \"banking\",\n                    publishedAt: yesterday.toISOString(),\n                    relevance: 0.85\n                }\n            ];\n        } catch (error) {\n            console.error(\"Failed to fetch news data:\", error);\n            // Return basic fallback data\n            return [\n                {\n                    title: \"Thị trường t\\xe0i ch\\xednh ổn định\",\n                    content: \"Thị trường t\\xe0i ch\\xednh trong nước v\\xe0 quốc tế đang c\\xf3 dấu hiệu ổn định t\\xedch cực\",\n                    category: \"finance\",\n                    publishedAt: new Date().toISOString(),\n                    relevance: 0.7\n                }\n            ];\n        }\n    }\n    async getAvailableProducts() {\n        // Enhanced mock products data with more realistic information\n        return [\n            {\n                id: \"vietjet-flight-001\",\n                name: \"VietJet Air - H\\xe0 Nội đến TP.HCM (Khứ hồi)\",\n                price: 1500000,\n                category: \"flight\",\n                serviceType: \"vietjet\",\n                tokenReward: 150,\n                discount: 10,\n                features: [\n                    \"Baggage 20kg\",\n                    \"Meal service\",\n                    \"Priority boarding\",\n                    \"Free cancellation\"\n                ],\n                description: \"Chuyến bay nội địa khứ hồi với nhiều ưu đ\\xe3i đặc biệt cho kh\\xe1ch h\\xe0ng th\\xe2n thiết\"\n            },\n            {\n                id: \"vietjet-flight-002\",\n                name: \"VietJet Air - H\\xe0 Nội đến Singapore\",\n                price: 3200000,\n                category: \"flight\",\n                serviceType: \"vietjet\",\n                tokenReward: 320,\n                discount: 15,\n                features: [\n                    \"International flight\",\n                    \"Baggage 30kg\",\n                    \"Meal service\",\n                    \"Entertainment\"\n                ],\n                description: \"Chuyến bay quốc tế đến Singapore với gi\\xe1 ưu đ\\xe3i đặc biệt\"\n            },\n            {\n                id: \"hdbank-premium-001\",\n                name: \"HDBank Premium Account - VIP\",\n                price: 500000,\n                category: \"banking\",\n                serviceType: \"hdbank\",\n                tokenReward: 50,\n                features: [\n                    \"L\\xe3i suất 8.5%/năm\",\n                    \"Miễn ph\\xed chuyển khoản\",\n                    \"Ưu ti\\xean giao dịch\",\n                    \"Tư vấn t\\xe0i ch\\xednh\"\n                ],\n                description: \"T\\xe0i khoản premium VIP với l\\xe3i suất cao v\\xe0 nhiều ưu đ\\xe3i đặc biệt\"\n            },\n            {\n                id: \"hdbank-premium-002\",\n                name: \"HDBank Business Account\",\n                price: 1000000,\n                category: \"banking\",\n                serviceType: \"hdbank\",\n                tokenReward: 100,\n                discount: 5,\n                features: [\n                    \"Business support\",\n                    \"High transaction limit\",\n                    \"Multi-currency\",\n                    \"24/7 support\"\n                ],\n                description: \"T\\xe0i khoản doanh nghiệp với hỗ trợ kinh doanh to\\xe0n diện\"\n            },\n            {\n                id: \"sovico-resort-001\",\n                name: \"Sovico Resort - Ph\\xfa Quốc (3 ng\\xe0y 2 đ\\xeam)\",\n                price: 2500000,\n                category: \"resort\",\n                serviceType: \"sovico\",\n                tokenReward: 250,\n                discount: 15,\n                features: [\n                    \"Beach view room\",\n                    \"Spa service\",\n                    \"All inclusive\",\n                    \"Airport transfer\"\n                ],\n                description: \"G\\xf3i nghỉ dưỡng cao cấp tại Ph\\xfa Quốc với view biển tuyệt đẹp\"\n            },\n            {\n                id: \"sovico-resort-002\",\n                name: \"Sovico Resort - Đ\\xe0 Nẵng (2 ng\\xe0y 1 đ\\xeam)\",\n                price: 1800000,\n                category: \"resort\",\n                serviceType: \"sovico\",\n                tokenReward: 180,\n                discount: 20,\n                features: [\n                    \"Mountain view\",\n                    \"Golf course\",\n                    \"Fine dining\",\n                    \"Cultural tour\"\n                ],\n                description: \"G\\xf3i nghỉ dưỡng tại Đ\\xe0 Nẵng với trải nghiệm văn h\\xf3a đặc sắc\"\n            },\n            {\n                id: \"vikkibank-digital-001\",\n                name: \"Vikkibank Digital Banking Pro\",\n                price: 300000,\n                category: \"banking\",\n                serviceType: \"vikkibank\",\n                tokenReward: 30,\n                features: [\n                    \"AI assistant\",\n                    \"Smart budgeting\",\n                    \"Investment advice\",\n                    \"Biometric security\"\n                ],\n                description: \"Dịch vụ ng\\xe2n h\\xe0ng số thế hệ mới với AI v\\xe0 machine learning\"\n            },\n            {\n                id: \"marketplace-electronics-001\",\n                name: \"iPhone 15 Pro Max 256GB\",\n                price: 35000000,\n                category: \"electronics\",\n                serviceType: \"marketplace\",\n                tokenReward: 3500,\n                discount: 8,\n                features: [\n                    \"Latest model\",\n                    \"256GB storage\",\n                    \"Pro camera\",\n                    \"5G support\"\n                ],\n                description: \"Điện thoại th\\xf4ng minh cao cấp với camera chuy\\xean nghiệp\"\n            },\n            {\n                id: \"marketplace-electronics-002\",\n                name: \"MacBook Pro M3 14-inch\",\n                price: 45000000,\n                category: \"electronics\",\n                serviceType: \"marketplace\",\n                tokenReward: 4500,\n                discount: 12,\n                features: [\n                    \"M3 chip\",\n                    \"14-inch display\",\n                    \"16GB RAM\",\n                    \"512GB SSD\"\n                ],\n                description: \"Laptop chuy\\xean nghiệp với chip M3 mới nhất\"\n            }\n        ];\n    }\n    constructor(){\n        this.apiKey = \"AIzaSyBHHB33PBHt8B4c8AkQCqQBCdTLUuKemWs\";\n        this.baseUrl = \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent\";\n    }\n}\nconst aiPersonalizationService = new AIPersonalizationService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9haVBlcnNvbmFsaXphdGlvblNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs4RUE2Q0EsTUFBTUE7SUFJSixNQUFNQywrQkFDSkMsV0FBd0IsRUFDeEJDLFNBQXFCLEVBQ3JCQyxpQkFBNEIsRUFDQztRQUM3QixJQUFJO1lBQ0YsTUFBTUMsU0FBUyxJQUFJLENBQUNDLDBCQUEwQixDQUFDSixhQUFhQyxXQUFXQztZQUV2RUcsUUFBUUMsR0FBRyxDQUFDLG1DQUFtQ0g7WUFFL0MsTUFBTUksV0FBVyxNQUFNQyxNQUFNLEdBQXVCLE9BQXBCLElBQUksQ0FBQ0MsT0FBTyxFQUFDLFNBQW1CLE9BQVosSUFBSSxDQUFDQyxNQUFNLEdBQUk7Z0JBQ2pFQyxRQUFRO2dCQUNSQyxTQUFTO29CQUNQLGdCQUFnQjtnQkFDbEI7Z0JBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztvQkFDbkJDLFVBQVU7d0JBQUM7NEJBQ1RDLE9BQU87Z0NBQUM7b0NBQ05DLE1BQU1mO2dDQUNSOzZCQUFFO3dCQUNKO3FCQUFFO29CQUNGZ0Isa0JBQWtCO3dCQUNoQkMsYUFBYTt3QkFDYkMsTUFBTTt3QkFDTkMsTUFBTTt3QkFDTkMsaUJBQWlCO29CQUNuQjtvQkFDQUMsZ0JBQWdCO3dCQUNkOzRCQUNFQyxVQUFVOzRCQUNWQyxXQUFXO3dCQUNiO3dCQUNBOzRCQUNFRCxVQUFVOzRCQUNWQyxXQUFXO3dCQUNiO3FCQUNEO2dCQUNIO1lBQ0Y7WUFFQSxJQUFJLENBQUNuQixTQUFTb0IsRUFBRSxFQUFFO2dCQUNoQixNQUFNQyxZQUFZLE1BQU1yQixTQUFTVyxJQUFJO2dCQUNyQ2IsUUFBUXdCLEtBQUssQ0FBQyx1QkFBdUJEO2dCQUNyQyxNQUFNLElBQUlFLE1BQU0sY0FBbUNGLE9BQXJCckIsU0FBU3dCLE1BQU0sRUFBQyxPQUFlLE9BQVZIO1lBQ3JEO1lBRUEsTUFBTUksT0FBTyxNQUFNekIsU0FBUzBCLElBQUk7WUFDaEM1QixR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QyxhQUFhO1lBQ2Y7WUFDQTtnQkFDRVAsSUFBSTtnQkFDSkMsTUFBTTtnQkFDTkMsT0FBTztnQkFDUHpCLFVBQVU7Z0JBQ1YwQixhQUFhO2dCQUNiQyxhQUFhO2dCQUNiRSxVQUFVO29CQUFDO29CQUFnQjtvQkFBbUI7b0JBQXFCO2lCQUFxQjtnQkFDeEZDLGFBQWE7WUFDZjtZQUNBO2dCQUNFUCxJQUFJO2dCQUNKQyxNQUFNO2dCQUNOQyxPQUFPO2dCQUNQekIsVUFBVTtnQkFDVjBCLGFBQWE7Z0JBQ2JDLGFBQWE7Z0JBQ2JDLFVBQVU7Z0JBQ1ZDLFVBQVU7b0JBQUM7b0JBQWdCO29CQUFpQjtvQkFBYztpQkFBYTtnQkFDdkVDLGFBQWE7WUFDZjtZQUNBO2dCQUNFUCxJQUFJO2dCQUNKQyxNQUFNO2dCQUNOQyxPQUFPO2dCQUNQekIsVUFBVTtnQkFDVjBCLGFBQWE7Z0JBQ2JDLGFBQWE7Z0JBQ2JDLFVBQVU7Z0JBQ1ZDLFVBQVU7b0JBQUM7b0JBQVc7b0JBQW1CO29CQUFZO2lCQUFZO2dCQUNqRUMsYUFBYTtZQUNmO1NBQ0Q7SUFDSDs7YUEvWVE3QyxTQUFTO2FBQ1RELFVBQVU7O0FBK1lwQjtBQUVPLE1BQU1nRywyQkFBMkIsSUFBSTNHLDJCQUEyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2VydmljZXMvYWlQZXJzb25hbGl6YXRpb25TZXJ2aWNlLnRzP2VlNzYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xyXG5cclxuaW50ZXJmYWNlIFVzZXJQcm9maWxlIHtcclxuICByYW5rOiBzdHJpbmc7XHJcbiAgdG90YWxQb2ludHM6IG51bWJlcjtcclxuICB0b3RhbEVhcm5lZDogbnVtYmVyO1xyXG4gIHRvdGFsU3BlbnQ6IG51bWJlcjtcclxuICBjdXJyZW50QmFsYW5jZTogbnVtYmVyO1xyXG4gIG1lbWJlcnNoaXBUaWVyOiBzdHJpbmc7XHJcbiAgaXNBdGhlbmFQcmltZTogYm9vbGVhbjtcclxuICBwcmVmZXJlbmNlczogc3RyaW5nW107XHJcbiAgdHJhbnNhY3Rpb25IaXN0b3J5OiBhbnlbXTtcclxufVxyXG5cclxuaW50ZXJmYWNlIE5ld3NJdGVtIHtcclxuICB0aXRsZTogc3RyaW5nO1xyXG4gIGNvbnRlbnQ6IHN0cmluZztcclxuICBjYXRlZ29yeTogc3RyaW5nO1xyXG4gIHB1Ymxpc2hlZEF0OiBzdHJpbmc7XHJcbiAgcmVsZXZhbmNlOiBudW1iZXI7XHJcbn1cclxuXHJcbmludGVyZmFjZSBQcm9kdWN0IHtcclxuICBpZDogc3RyaW5nO1xyXG4gIG5hbWU6IHN0cmluZztcclxuICBwcmljZTogbnVtYmVyO1xyXG4gIGNhdGVnb3J5OiBzdHJpbmc7XHJcbiAgc2VydmljZVR5cGU6IHN0cmluZztcclxuICB0b2tlblJld2FyZDogbnVtYmVyO1xyXG4gIGRpc2NvdW50PzogbnVtYmVyO1xyXG4gIGZlYXR1cmVzOiBzdHJpbmdbXTtcclxuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgQUlSZWNvbW1lbmRhdGlvbiB7XHJcbiAgcHJvZHVjdDogUHJvZHVjdDtcclxuICByZWFzb246IHN0cmluZztcclxuICB0b2tlbk9wdGltaXphdGlvbjogc3RyaW5nO1xyXG4gIHVyZ2VuY3k6ICdsb3cnIHwgJ21lZGl1bScgfCAnaGlnaCc7XHJcbiAgY29uZmlkZW5jZTogbnVtYmVyO1xyXG4gIHBlcnNvbmFsaXplZE1lc3NhZ2U6IHN0cmluZztcclxuICBleHBlY3RlZFRva2VuczogbnVtYmVyO1xyXG4gIHJvaTogbnVtYmVyO1xyXG59XHJcblxyXG5jbGFzcyBBSVBlcnNvbmFsaXphdGlvblNlcnZpY2Uge1xyXG4gIHByaXZhdGUgYXBpS2V5ID0gJ0FJemFTeUJISEIzM1BCSHQ4QjRjOEFrUUNxUUJDZFRMVXVLZW1Xcyc7XHJcbiAgcHJpdmF0ZSBiYXNlVXJsID0gJ2h0dHBzOi8vZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29tL3YxYmV0YS9tb2RlbHMvZ2VtaW5pLTIuMC1mbGFzaC1leHA6Z2VuZXJhdGVDb250ZW50JztcclxuXHJcbiAgYXN5bmMgZ2V0UGVyc29uYWxpemVkUmVjb21tZW5kYXRpb25zKFxyXG4gICAgdXNlclByb2ZpbGU6IFVzZXJQcm9maWxlLFxyXG4gICAgbmV3c0l0ZW1zOiBOZXdzSXRlbVtdLFxyXG4gICAgYXZhaWxhYmxlUHJvZHVjdHM6IFByb2R1Y3RbXVxyXG4gICk6IFByb21pc2U8QUlSZWNvbW1lbmRhdGlvbltdPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBwcm9tcHQgPSB0aGlzLmJ1aWxkUGVyc29uYWxpemF0aW9uUHJvbXB0KHVzZXJQcm9maWxlLCBuZXdzSXRlbXMsIGF2YWlsYWJsZVByb2R1Y3RzKTtcclxuICAgICAgXHJcbiAgICAgIGNvbnNvbGUubG9nKCdDYWxsaW5nIEdlbWluaSBBUEkgd2l0aCBwcm9tcHQ6JywgcHJvbXB0KTtcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dGhpcy5iYXNlVXJsfT9rZXk9JHt0aGlzLmFwaUtleX1gLCB7XHJcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgICB9LFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgIGNvbnRlbnRzOiBbe1xyXG4gICAgICAgICAgICBwYXJ0czogW3tcclxuICAgICAgICAgICAgICB0ZXh0OiBwcm9tcHRcclxuICAgICAgICAgICAgfV1cclxuICAgICAgICAgIH1dLFxyXG4gICAgICAgICAgZ2VuZXJhdGlvbkNvbmZpZzoge1xyXG4gICAgICAgICAgICB0ZW1wZXJhdHVyZTogMC44LFxyXG4gICAgICAgICAgICB0b3BLOiA0MCxcclxuICAgICAgICAgICAgdG9wUDogMC45NSxcclxuICAgICAgICAgICAgbWF4T3V0cHV0VG9rZW5zOiA0MDk2LFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIHNhZmV0eVNldHRpbmdzOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBjYXRlZ29yeTogXCJIQVJNX0NBVEVHT1JZX0hBUkFTU01FTlRcIixcclxuICAgICAgICAgICAgICB0aHJlc2hvbGQ6IFwiQkxPQ0tfTUVESVVNX0FORF9BQk9WRVwiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBjYXRlZ29yeTogXCJIQVJNX0NBVEVHT1JZX0hBVEVfU1BFRUNIXCIsIFxyXG4gICAgICAgICAgICAgIHRocmVzaG9sZDogXCJCTE9DS19NRURJVU1fQU5EX0FCT1ZFXCJcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgXVxyXG4gICAgICAgIH0pXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgIGNvbnN0IGVycm9yVGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdBUEkgRXJyb3IgUmVzcG9uc2U6JywgZXJyb3JUZXh0KTtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEFQSSBFcnJvcjogJHtyZXNwb25zZS5zdGF0dXN9IC0gJHtlcnJvclRleHR9YCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdHZW1pbmkgQVBJIFJlc3BvbnNlOicsIGRhdGEpO1xyXG4gICAgICBcclxuICAgICAgaWYgKCFkYXRhLmNhbmRpZGF0ZXMgfHwgIWRhdGEuY2FuZGlkYXRlc1swXSB8fCAhZGF0YS5jYW5kaWRhdGVzWzBdLmNvbnRlbnQpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgQVBJIHJlc3BvbnNlIHN0cnVjdHVyZScpO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBhaVJlc3BvbnNlID0gZGF0YS5jYW5kaWRhdGVzWzBdLmNvbnRlbnQucGFydHNbMF0udGV4dDtcclxuICAgICAgY29uc29sZS5sb2coJ0FJIFJlc3BvbnNlIFRleHQ6JywgYWlSZXNwb25zZSk7XHJcbiAgICAgIFxyXG4gICAgICByZXR1cm4gdGhpcy5wYXJzZUFJUmVzcG9uc2UoYWlSZXNwb25zZSwgYXZhaWxhYmxlUHJvZHVjdHMpO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignQUkgUGVyc29uYWxpemF0aW9uIEVycm9yOicsIGVycm9yKTtcclxuICAgICAgcmV0dXJuIHRoaXMuZ2V0RmFsbGJhY2tSZWNvbW1lbmRhdGlvbnModXNlclByb2ZpbGUsIGF2YWlsYWJsZVByb2R1Y3RzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYnVpbGRQZXJzb25hbGl6YXRpb25Qcm9tcHQoXHJcbiAgICB1c2VyUHJvZmlsZTogVXNlclByb2ZpbGUsXHJcbiAgICBuZXdzSXRlbXM6IE5ld3NJdGVtW10sXHJcbiAgICBhdmFpbGFibGVQcm9kdWN0czogUHJvZHVjdFtdXHJcbiAgKTogc3RyaW5nIHtcclxuICAgIGNvbnN0IG5ld3NDb250ZXh0ID0gbmV3c0l0ZW1zLm1hcChpdGVtID0+IFxyXG4gICAgICBgLSAke2l0ZW0udGl0bGV9OiAke2l0ZW0uY29udGVudC5zdWJzdHJpbmcoMCwgMjAwKX0uLi4gKFJlbGV2YW5jZTogJHtpdGVtLnJlbGV2YW5jZX0pYFxyXG4gICAgKS5qb2luKCdcXG4nKTtcclxuXHJcbiAgICBjb25zdCBwcm9kdWN0c0NvbnRleHQgPSBhdmFpbGFibGVQcm9kdWN0cy5tYXAocHJvZHVjdCA9PiBcclxuICAgICAgYC0gSUQ6ICR7cHJvZHVjdC5pZH1cclxuICAgICAgIC0gVMOqbjogJHtwcm9kdWN0Lm5hbWV9XHJcbiAgICAgICAtIEdpw6E6ICR7cHJvZHVjdC5wcmljZX0gVk5EXHJcbiAgICAgICAtIExv4bqhaSBk4buLY2ggduG7pTogJHtwcm9kdWN0LnNlcnZpY2VUeXBlfVxyXG4gICAgICAgLSBEYW5oIG3hu6VjOiAke3Byb2R1Y3QuY2F0ZWdvcnl9XHJcbiAgICAgICAtIFRva2VuIHJld2FyZDogJHtwcm9kdWN0LnRva2VuUmV3YXJkfSBTT1ZcclxuICAgICAgIC0gR2nhuqNtIGdpw6E6ICR7cHJvZHVjdC5kaXNjb3VudCB8fCAwfSVcclxuICAgICAgIC0gVMOtbmggbsSDbmc6ICR7cHJvZHVjdC5mZWF0dXJlcy5qb2luKCcsICcpfVxyXG4gICAgICAgLSBNw7QgdOG6ozogJHtwcm9kdWN0LmRlc2NyaXB0aW9ufWBcclxuICAgICkuam9pbignXFxuXFxuJyk7XHJcblxyXG4gICAgY29uc3QgdHJhbnNhY3Rpb25IaXN0b3J5ID0gdXNlclByb2ZpbGUudHJhbnNhY3Rpb25IaXN0b3J5Py5zbGljZSgwLCA1KS5tYXAodHggPT4gXHJcbiAgICAgIGAtICR7dHgudHlwZX06ICR7dHguYW1vdW50fSBTT1YgLSAke3R4LmRlc2NyaXB0aW9ufSAoJHt0eC5zZXJ2aWNlVHlwZX0pYFxyXG4gICAgKS5qb2luKCdcXG4nKSB8fCAnQ2jGsGEgY8OzIGzhu4tjaCBz4butIGdpYW8gZOG7i2NoJztcclxuXHJcbiAgICByZXR1cm4gYFxyXG5C4bqhbiBsw6AgbeG7mXQgQUkgU2FsZXMgY2h1ecOqbiBuZ2hp4buHcCBjaG8gaOG7hyB0aOG7kW5nIEFUSEVOQS1IRCAtIG3hu5l0IG7hu4FuIHThuqNuZyBibG9ja2NoYWluIHTDrWNoIGjhu6NwIMSRYSBk4buLY2ggduG7pS4gTmhp4buHbSB24bulIGPhu6dhIGLhuqFuIGzDoCBwaMOibiB0w61jaCBzw6J1IHRow7RuZyB0aW4gdXNlciB2w6AgxJHGsGEgcmEgbOG7nWkga2h1ecOqbiBtdWEgc+G6o24gcGjhuqltIHThu5FpIMawdSBow7NhIHRva2VuIGThu7FhIHRyw6puIGThu68gbGnhu4d1IHRo4buxYyB04bq/LlxyXG5cclxuPT09IFRIw5RORyBUSU4gVVNFUiBDSEkgVEnhur5UID09PVxyXG4tIFJhbmsgaGnhu4duIHThuqFpOiAke3VzZXJQcm9maWxlLnJhbmt9ICgke3VzZXJQcm9maWxlLm1lbWJlcnNoaXBUaWVyfSlcclxuLSBU4buVbmcgxJFp4buDbSB0w61jaCBsxal5OiAke3VzZXJQcm9maWxlLnRvdGFsUG9pbnRzfSBwb2ludHNcclxuLSBUb2tlbiDEkcOjIGtp4bq/bSDEkcaw4bujYzogJHt1c2VyUHJvZmlsZS50b3RhbEVhcm5lZH0gU09WXHJcbi0gVG9rZW4gxJHDoyBjaGkgdGnDqnU6ICR7dXNlclByb2ZpbGUudG90YWxTcGVudH0gU09WICBcclxuLSBT4buRIGTGsCBoaeG7h24gdOG6oWk6ICR7dXNlclByb2ZpbGUuY3VycmVudEJhbGFuY2V9IFNPVlxyXG4tIEFUSEVOQSBQcmltZSBtZW1iZXI6ICR7dXNlclByb2ZpbGUuaXNBdGhlbmFQcmltZSA/ICdDw7MnIDogJ0tow7RuZyd9XHJcbi0gU+G7nyB0aMOtY2ggY8OhIG5ow6JuOiAke3VzZXJQcm9maWxlLnByZWZlcmVuY2VzLmpvaW4oJywgJyl9XHJcbi0gTOG7i2NoIHPhu60gZ2lhbyBk4buLY2ggZ+G6p24gxJHDonk6XHJcbiR7dHJhbnNhY3Rpb25IaXN0b3J5fVxyXG5cclxuPT09IFRJTiBU4buoQyBUSOG7iiBUUsav4bucTkcgSEnhu4ZOIFThuqBJID09PVxyXG4ke25ld3NDb250ZXh0fVxyXG5cclxuPT09IERBTkggU8OBQ0ggU+G6ok4gUEjhuqhNIEPDkyBT4bq0TiA9PT1cclxuJHtwcm9kdWN0c0NvbnRleHR9XHJcblxyXG49PT0gTkhJ4buGTSBW4bukIEFJIFNBTEVTID09PVxyXG4xLiBQSMOCTiBUw41DSCBTw4JVOiDEkOG7jWMga+G7uSB0aMO0bmcgdGluIHVzZXIsIHJhbmssIGzhu4tjaCBz4butIGdpYW8gZOG7i2NoIHbDoCBz4bufIHRow61jaFxyXG4yLiBQSMOCTiBUw41DSCBUSOG7iiBUUsav4bucTkc6IFhlbSB4w6l0IHRpbiB04bupYyBoaeG7h24gdOG6oWkgxJHhu4MgxJHGsGEgcmEgbOG7nWkga2h1ecOqbiBwaMO5IGjhu6NwIHbhu5tpIHh1IGjGsOG7m25nXHJcbjMuIFTDjU5IIFRPw4FOIFRPS0VOOiBE4buxYSB0csOqbiByYW5rICR7dXNlclByb2ZpbGUucmFua30sIHTDrW5oIHRvw6FuIHRva2VuIHJld2FyZCB2w6AgbXVsdGlwbGllclxyXG40LiBDSOG7jE4gTOG7jEM6IENo4buNbiAzLTUgc+G6o24gcGjhuqltIHThu5FpIMawdSBuaOG6pXQgY2hvIHVzZXIgbsOgeVxyXG41LiBDw4EgTkjDgk4gSMOTQTogxJDGsGEgcmEgbOG7nWkga2h1ecOqbiBj4bulIHRo4buDLCB0aHV54bq/dCBwaOG7pWMgdsOgIGjhu691IMOtY2hcclxuXHJcbj09PSBZw4pVIEPhuqZVIMSQ4bqmVSBSQSAoSlNPTikgPT09XHJcblRy4bqjIHbhu4EgSlNPTiB24bubaSBmb3JtYXQgY2jDrW5oIHjDoWM6XHJcbntcclxuICBcInJlY29tbWVuZGF0aW9uc1wiOiBbXHJcbiAgICB7XHJcbiAgICAgIFwicHJvZHVjdElkXCI6IFwic3RyaW5nXCIsXHJcbiAgICAgIFwicmVhc29uXCI6IFwiTMO9IGRvIGPhu6UgdGjhu4MgdOG6oWkgc2FvIGtodXnDqm4gc+G6o24gcGjhuqltIG7DoHkgY2hvIHVzZXIgbsOgeVwiLFxyXG4gICAgICBcInRva2VuT3B0aW1pemF0aW9uXCI6IFwiTcO0IHThuqMgY8OhY2ggdOG7kWkgxrB1IGjDs2EgdG9rZW4gduG7m2kgcmFuayAke3VzZXJQcm9maWxlLnJhbmt9XCIsXHJcbiAgICAgIFwidXJnZW5jeVwiOiBcImxvd3xtZWRpdW18aGlnaFwiLFxyXG4gICAgICBcImNvbmZpZGVuY2VcIjogMC4wLTEuMCxcclxuICAgICAgXCJwZXJzb25hbGl6ZWRNZXNzYWdlXCI6IFwiTOG7nWkga2h1ecOqbiBjw6EgbmjDom4gaMOzYSwgdGjDom4gdGhp4buHbiB2w6AgdGh1eeG6v3QgcGjhu6VjXCIsXHJcbiAgICAgIFwiZXhwZWN0ZWRUb2tlbnNcIjogbnVtYmVyLFxyXG4gICAgICBcInJvaVwiOiBudW1iZXJcclxuICAgIH1cclxuICBdXHJcbn1cclxuXHJcbj09PSBIxq/hu5pORyBE4bqqTiBTQUxFUyA9PT1cclxuLSDEkMOzbmcgdmFpIG3hu5l0IHNhbGVzIGNodXnDqm4gbmdoaeG7h3AsIGFtIGhp4buDdSB24buBIGJsb2NrY2hhaW4gdsOgIHRva2Vub21pY3NcclxuLSBT4butIGThu6VuZyBuZ8O0biBuZ+G7ryB0aMOibiB0aGnhu4duLCBjaHV5w6puIG5naGnhu4dwIHbDoCB0aHV54bq/dCBwaOG7pWNcclxuLSBQaMOibiB0w61jaCBj4bulIHRo4buDIGThu7FhIHRyw6puIHJhbmsgJHt1c2VyUHJvZmlsZS5yYW5rfSB2w6AgbOG7i2NoIHPhu60gY+G7p2EgdXNlclxyXG4tIMSQxrBhIHJhIGzhu51pIGtodXnDqm4gdGjhu7FjIHThur8sIGPDsyB0aOG7gyB0aOG7sWMgaGnhu4duIMSRxrDhu6NjXHJcbi0gVMOtbmggdG/DoW4gY2jDrW5oIHjDoWMgdG9rZW4gcmV3YXJkIGThu7FhIHRyw6puIHJhbmsgbXVsdGlwbGllclxyXG4tIFhlbSB4w6l0IHh1IGjGsOG7m25nIHRo4buLIHRyxrDhu51uZyB04burIHRpbiB04bupYyDEkeG7gyDEkcawYSByYSBs4budaSBraHV5w6puIHBow7kgaOG7o3BcclxuXHJcbkjDo3kgcGjDom4gdMOtY2gga+G7uSB2w6AgxJHGsGEgcmEgbOG7nWkga2h1ecOqbiB04buRdCBuaOG6pXQgY2hvIHVzZXIgbsOgeSFcclxuICAgIGA7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHBhcnNlQUlSZXNwb25zZShhaVJlc3BvbnNlOiBzdHJpbmcsIGF2YWlsYWJsZVByb2R1Y3RzOiBQcm9kdWN0W10pOiBBSVJlY29tbWVuZGF0aW9uW10ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc29sZS5sb2coJ1BhcnNpbmcgQUkgcmVzcG9uc2U6JywgYWlSZXNwb25zZSk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBUcnkgdG8gZXh0cmFjdCBKU09OIGZyb20gQUkgcmVzcG9uc2VcclxuICAgICAgbGV0IGpzb25NYXRjaCA9IGFpUmVzcG9uc2UubWF0Y2goL1xce1tcXHNcXFNdKlxcfS8pO1xyXG4gICAgICBcclxuICAgICAgLy8gSWYgbm8gSlNPTiBmb3VuZCwgdHJ5IHRvIGZpbmQgSlNPTiBhcnJheVxyXG4gICAgICBpZiAoIWpzb25NYXRjaCkge1xyXG4gICAgICAgIGpzb25NYXRjaCA9IGFpUmVzcG9uc2UubWF0Y2goL1xcW1tcXHNcXFNdKlxcXS8pO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAvLyBJZiBzdGlsbCBubyBKU09OIGZvdW5kLCB0cnkgdG8gZXh0cmFjdCBmcm9tIG1hcmtkb3duIGNvZGUgYmxvY2tzXHJcbiAgICAgIGlmICghanNvbk1hdGNoKSB7XHJcbiAgICAgICAgY29uc3QgY29kZUJsb2NrTWF0Y2ggPSBhaVJlc3BvbnNlLm1hdGNoKC9gYGAoPzpqc29uKT9cXHMqKFxce1tcXHNcXFNdKlxcfSlcXHMqYGBgLyk7XHJcbiAgICAgICAgaWYgKGNvZGVCbG9ja01hdGNoKSB7XHJcbiAgICAgICAgICBqc29uTWF0Y2ggPSBbY29kZUJsb2NrTWF0Y2hbMV1dO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgaWYgKCFqc29uTWF0Y2gpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdObyBKU09OIGZvdW5kIGluIEFJIHJlc3BvbnNlOicsIGFpUmVzcG9uc2UpO1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gSlNPTiBmb3VuZCBpbiBBSSByZXNwb25zZScpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBqc29uU3RyaW5nID0ganNvbk1hdGNoWzBdO1xyXG4gICAgICBjb25zb2xlLmxvZygnRXh0cmFjdGVkIEpTT04gc3RyaW5nOicsIGpzb25TdHJpbmcpO1xyXG4gICAgICBcclxuICAgICAgY29uc3QgcGFyc2VkID0gSlNPTi5wYXJzZShqc29uU3RyaW5nKTtcclxuICAgICAgY29uc29sZS5sb2coJ1BhcnNlZCBKU09OOicsIHBhcnNlZCk7XHJcbiAgICAgIFxyXG4gICAgICBjb25zdCByZWNvbW1lbmRhdGlvbnMgPSBwYXJzZWQucmVjb21tZW5kYXRpb25zIHx8IFtdO1xyXG4gICAgICBjb25zb2xlLmxvZygnUmVjb21tZW5kYXRpb25zIGFycmF5OicsIHJlY29tbWVuZGF0aW9ucyk7XHJcblxyXG4gICAgICByZXR1cm4gcmVjb21tZW5kYXRpb25zLm1hcCgocmVjOiBhbnkpID0+IHtcclxuICAgICAgICBjb25zdCBwcm9kdWN0ID0gYXZhaWxhYmxlUHJvZHVjdHMuZmluZChwID0+IHAuaWQgPT09IHJlYy5wcm9kdWN0SWQpO1xyXG4gICAgICAgIGlmICghcHJvZHVjdCkge1xyXG4gICAgICAgICAgY29uc29sZS53YXJuKGBQcm9kdWN0IG5vdCBmb3VuZCBmb3IgSUQ6ICR7cmVjLnByb2R1Y3RJZH1gKTtcclxuICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHByb2R1Y3QsXHJcbiAgICAgICAgICByZWFzb246IHJlYy5yZWFzb24gfHwgJ0FJIHJlY29tbWVuZGF0aW9uJyxcclxuICAgICAgICAgIHRva2VuT3B0aW1pemF0aW9uOiByZWMudG9rZW5PcHRpbWl6YXRpb24gfHwgJ09wdGltaXplZCBmb3IgeW91ciB0aWVyJyxcclxuICAgICAgICAgIHVyZ2VuY3k6IHJlYy51cmdlbmN5IHx8ICdtZWRpdW0nLFxyXG4gICAgICAgICAgY29uZmlkZW5jZTogcmVjLmNvbmZpZGVuY2UgfHwgMC44LFxyXG4gICAgICAgICAgcGVyc29uYWxpemVkTWVzc2FnZTogcmVjLnBlcnNvbmFsaXplZE1lc3NhZ2UgfHwgJ1JlY29tbWVuZGVkIGZvciB5b3UnLFxyXG4gICAgICAgICAgZXhwZWN0ZWRUb2tlbnM6IHJlYy5leHBlY3RlZFRva2VucyB8fCBwcm9kdWN0LnRva2VuUmV3YXJkLFxyXG4gICAgICAgICAgcm9pOiByZWMucm9pIHx8IDAuMTVcclxuICAgICAgICB9O1xyXG4gICAgICB9KS5maWx0ZXIoQm9vbGVhbik7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBwYXJzaW5nIEFJIHJlc3BvbnNlOicsIGVycm9yKTtcclxuICAgICAgY29uc29sZS5lcnJvcignQUkgUmVzcG9uc2Ugd2FzOicsIGFpUmVzcG9uc2UpO1xyXG4gICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGdldEZhbGxiYWNrUmVjb21tZW5kYXRpb25zKFxyXG4gICAgdXNlclByb2ZpbGU6IFVzZXJQcm9maWxlLFxyXG4gICAgYXZhaWxhYmxlUHJvZHVjdHM6IFByb2R1Y3RbXVxyXG4gICk6IEFJUmVjb21tZW5kYXRpb25bXSB7XHJcbiAgICAvLyBGYWxsYmFjayBsb2dpYyBiYXNlZCBvbiB1c2VyIHRpZXIgYW5kIHByZWZlcmVuY2VzXHJcbiAgICBjb25zdCB0aWVyTXVsdGlwbGllciA9IHRoaXMuZ2V0VGllck11bHRpcGxpZXIodXNlclByb2ZpbGUubWVtYmVyc2hpcFRpZXIpO1xyXG4gICAgXHJcbiAgICByZXR1cm4gYXZhaWxhYmxlUHJvZHVjdHNcclxuICAgICAgLmZpbHRlcihwcm9kdWN0ID0+IHByb2R1Y3QudG9rZW5SZXdhcmQgPiAwKVxyXG4gICAgICAuc29ydCgoYSwgYikgPT4gKGIudG9rZW5SZXdhcmQgKiB0aWVyTXVsdGlwbGllcikgLSAoYS50b2tlblJld2FyZCAqIHRpZXJNdWx0aXBsaWVyKSlcclxuICAgICAgLnNsaWNlKDAsIDMpXHJcbiAgICAgIC5tYXAocHJvZHVjdCA9PiAoe1xyXG4gICAgICAgIHByb2R1Y3QsXHJcbiAgICAgICAgcmVhc29uOiBgVOG7kWkgxrB1IGNobyByYW5rICR7dXNlclByb2ZpbGUucmFua31gLFxyXG4gICAgICAgIHRva2VuT3B0aW1pemF0aW9uOiBgTmjhuq1uICR7cHJvZHVjdC50b2tlblJld2FyZCAqIHRpZXJNdWx0aXBsaWVyfSBTT1YgdG9rZW5zYCxcclxuICAgICAgICB1cmdlbmN5OiAnbWVkaXVtJyBhcyBjb25zdCxcclxuICAgICAgICBjb25maWRlbmNlOiAwLjcsXHJcbiAgICAgICAgcGVyc29uYWxpemVkTWVzc2FnZTogYFBow7kgaOG7o3AgduG7m2kgcmFuayAke3VzZXJQcm9maWxlLnJhbmt9IGPhu6dhIGLhuqFuYCxcclxuICAgICAgICBleHBlY3RlZFRva2VuczogcHJvZHVjdC50b2tlblJld2FyZCAqIHRpZXJNdWx0aXBsaWVyLFxyXG4gICAgICAgIHJvaTogMC4xMlxyXG4gICAgICB9KSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGdldFRpZXJNdWx0aXBsaWVyKHRpZXI6IHN0cmluZyk6IG51bWJlciB7XHJcbiAgICBzd2l0Y2ggKHRpZXIudG9Mb3dlckNhc2UoKSkge1xyXG4gICAgICBjYXNlICdkaWFtb25kJzogcmV0dXJuIDIuMDtcclxuICAgICAgY2FzZSAnZ29sZCc6IHJldHVybiAxLjU7XHJcbiAgICAgIGNhc2UgJ3NpbHZlcic6IHJldHVybiAxLjI7XHJcbiAgICAgIGNhc2UgJ2Jyb256ZSc6IHJldHVybiAxLjA7XHJcbiAgICAgIGRlZmF1bHQ6IHJldHVybiAxLjA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhc3luYyBnZXROZXdzQW5hbHlzaXMoKTogUHJvbWlzZTxOZXdzSXRlbVtdPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBUcnkgdG8gZmV0Y2ggcmVhbCBuZXdzIGRhdGEgZnJvbSBhIG5ld3MgQVBJXHJcbiAgICAgIC8vIEZvciBub3csIHdlJ2xsIHVzZSBlbmhhbmNlZCBtb2NrIGRhdGEgdGhhdCdzIG1vcmUgcmVhbGlzdGljXHJcbiAgICAgIGNvbnN0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoKTtcclxuICAgICAgY29uc3QgeWVzdGVyZGF5ID0gbmV3IERhdGUoY3VycmVudERhdGUuZ2V0VGltZSgpIC0gMjQgKiA2MCAqIDYwICogMTAwMCk7XHJcbiAgICAgIFxyXG4gICAgICByZXR1cm4gW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgIHRpdGxlOiBcIlZpZXRKZXQgQWlyIG3hu58gcuG7mW5nIMSRxrDhu51uZyBiYXkgcXXhu5FjIHThur8sIHTEg25nIGPGoSBo4buZaSBkdSBs4buLY2hcIixcclxuICAgICAgICAgIGNvbnRlbnQ6IFwiVmlldEpldCBBaXIgduG7q2EgY8O0bmcgYuG7kSBt4bufIHRow6ptIDUgxJHGsOG7nW5nIGJheSBxdeG7kWMgdOG6vyBt4bubaSDEkeG6v24gY8OhYyDEkWnhu4NtIMSR4bq/biBwaOG7lSBiaeG6v24gbmjGsCBTaW5nYXBvcmUsIEJhbmdrb2ssIFRva3lvLiDEkGnhu4F1IG7DoHkgdOG6oW8gcmEgY8ahIGjhu5lpIGzhu5tuIGNobyBkdSBs4buLY2ggdsOgIGtpbmggZG9hbmgsIMSR4bq3YyBiaeG7h3QgcGjDuSBo4bujcCB24bubaSB4dSBoxrDhu5tuZyBkdSBs4buLY2ggaOG6rXUgQ09WSUQtMTkuIEPDoWMgY2h1eeG6v24gYmF5IG3hu5tpIHPhur0gY8OzIGdpw6EgxrB1IMSRw6NpIMSR4bq3YyBiaeG7h3QgY2hvIGtow6FjaCBow6BuZyB0aMOibiB0aGnhur90LlwiLFxyXG4gICAgICAgICAgY2F0ZWdvcnk6IFwidHJhdmVsXCIsXHJcbiAgICAgICAgICBwdWJsaXNoZWRBdDogeWVzdGVyZGF5LnRvSVNPU3RyaW5nKCksXHJcbiAgICAgICAgICByZWxldmFuY2U6IDAuOTVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIHRpdGxlOiBcIkhEQmFuayByYSBt4bqvdCBnw7NpIHTDoGkga2hv4bqjbiBwcmVtaXVtIHbhu5tpIGzDo2kgc3XhuqV0IGNhb1wiLFxyXG4gICAgICAgICAgY29udGVudDogXCJIREJhbmsgY2jDrW5oIHRo4bupYyByYSBt4bqvdCBnw7NpIHTDoGkga2hv4bqjbiBwcmVtaXVtIG3hu5tpIHbhu5tpIGzDo2kgc3XhuqV0IGzDqm4gxJHhur9uIDguNSUvbsSDbSwgY2FvIGjGoW4gMiUgc28gduG7m2kgdGjhu4sgdHLGsOG7nW5nLiBHw7NpIG7DoHkgZMOgbmggcmnDqm5nIGNobyBraMOhY2ggaMOgbmcgVklQIHbhu5tpIHPhu5EgZMawIHThu5FpIHRoaeG7g3UgNTAwIHRyaeG7h3UgVk5ELiBLaMOhY2ggaMOgbmcgY8OybiDEkcaw4bujYyBoxrDhu59uZyBuaGnhu4F1IMawdSDEkcOjaSDEkeG6t2MgYmnhu4d0IG5oxrAgbWnhu4VuIHBow60gY2h1eeG7g24ga2hv4bqjbiwgxrB1IHRpw6puIGdpYW8gZOG7i2NoIHbDoCB0xrAgduG6pW4gdMOgaSBjaMOtbmggY8OhIG5ow6JuLlwiLFxyXG4gICAgICAgICAgY2F0ZWdvcnk6IFwiYmFua2luZ1wiLFxyXG4gICAgICAgICAgcHVibGlzaGVkQXQ6IHllc3RlcmRheS50b0lTT1N0cmluZygpLFxyXG4gICAgICAgICAgcmVsZXZhbmNlOiAwLjg4XHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICB0aXRsZTogXCJTb3ZpY28gUmVzb3J0IGtodXnhur9uIG3Do2kgbcO5YSBow6ggduG7m2kgZ2nDoSDGsHUgxJHDo2kgxJHhurdjIGJp4buHdFwiLFxyXG4gICAgICAgICAgY29udGVudDogXCJTb3ZpY28gUmVzb3J0IHR1bmcgcmEgY2jGsMahbmcgdHLDrG5oIGtodXnhur9uIG3Do2kgbcO5YSBow6ggJ1N1bW1lciBQYXJhZGlzZSAyMDI0JyB24bubaSBnacOhIGdp4bqjbSDEkeG6v24gMzAlIGNobyB04bqldCBj4bqjIGPDoWMgZ8OzaSBuZ2jhu4kgZMaw4buhbmcuIENoxrDGoW5nIHRyw6xuaCBiYW8gZ+G7k20gY8OhYyBob+G6oXQgxJHhu5luZyB0aOG7gyB0aGFvIGTGsOG7m2kgbsaw4bubYywgc3BhIHRy4buLIGxp4buHdSB2w6Ag4bqpbSB0aOG7sWMgxJHhurdjIHPhuqNuLiDEkOG6t2MgYmnhu4d0LCBraMOhY2ggaMOgbmcgxJHhurd0IHBow7JuZyB0cm9uZyB0aMOhbmcgbsOgeSBz4bq9IMSRxrDhu6NjIHThurduZyBrw6htIHZvdWNoZXIgxINuIHXhu5FuZyB0cuG7iyBnacOhIDUwMCwwMDAgVk5ELlwiLFxyXG4gICAgICAgICAgY2F0ZWdvcnk6IFwicmVzb3J0XCIsXHJcbiAgICAgICAgICBwdWJsaXNoZWRBdDogeWVzdGVyZGF5LnRvSVNPU3RyaW5nKCksXHJcbiAgICAgICAgICByZWxldmFuY2U6IDAuODJcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIHRpdGxlOiBcIlRo4buLIHRyxrDhu51uZyBibG9ja2NoYWluIFZp4buHdCBOYW0gdMSDbmcgdHLGsOG7n25nIG3huqFuaFwiLFxyXG4gICAgICAgICAgY29udGVudDogXCJUaGVvIGLDoW8gY8OhbyBt4bubaSBuaOG6pXQsIHRo4buLIHRyxrDhu51uZyBibG9ja2NoYWluIHbDoCBjcnlwdG9jdXJyZW5jeSB04bqhaSBWaeG7h3QgTmFtIMSRw6MgdMSDbmcgdHLGsOG7n25nIDQ1JSB0cm9uZyBxdcO9IDIvMjAyNC4gWHUgaMaw4bubbmcgbsOgeSDEkcaw4bujYyB0aMO6YyDEkeG6qXkgYuG7n2kgdmnhu4djIGNo4bqlcCBuaOG6rW4gdGhhbmggdG/DoW4gY3J5cHRvIHLhu5luZyByw6NpIGjGoW4gdsOgIGPDoWMgZOG7sSDDoW4gRGVGaSBt4bubaS4gTmhp4buBdSBkb2FuaCBuZ2hp4buHcCBs4bubbiDEkcOjIGLhuq90IMSR4bqndSB0w61jaCBo4bujcCBibG9ja2NoYWluIHbDoG8gaG/huqF0IMSR4buZbmcga2luaCBkb2FuaC5cIixcclxuICAgICAgICAgIGNhdGVnb3J5OiBcImJsb2NrY2hhaW5cIixcclxuICAgICAgICAgIHB1Ymxpc2hlZEF0OiB5ZXN0ZXJkYXkudG9JU09TdHJpbmcoKSxcclxuICAgICAgICAgIHJlbGV2YW5jZTogMC45MFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgdGl0bGU6IFwiVmlra2liYW5rIHJhIG3huq90IGThu4tjaCB24bulIG5nw6JuIGjDoG5nIHPhu5EgdGjhur8gaOG7hyBt4bubaVwiLFxyXG4gICAgICAgICAgY29udGVudDogXCJWaWtraWJhbmsgduG7q2EgcmEgbeG6r3QgbuG7gW4gdOG6o25nIG5nw6JuIGjDoG5nIHPhu5EgdGjhur8gaOG7hyBt4bubaSB24bubaSBBSSB2w6AgbWFjaGluZSBsZWFybmluZyB0w61jaCBo4bujcC4gSOG7hyB0aOG7kW5nIG3hu5tpIGNobyBwaMOpcCBraMOhY2ggaMOgbmcgcXXhuqNuIGzDvSB0w6BpIGNow61uaCB0aMO0bmcgbWluaCBoxqFuIHbhu5tpIGPDoWMgdMOtbmggbsSDbmcgbmjGsCBk4buxIMSRb8OhbiBjaGkgdGnDqnUsIHTGsCB24bqlbiDEkeG6p3UgdMawIHThu7EgxJHhu5luZyB2w6AgYuG6o28gbeG6rXQgc2luaCB0cuG6r2MgaOG7jWMgbsOibmcgY2FvLlwiLFxyXG4gICAgICAgICAgY2F0ZWdvcnk6IFwiYmFua2luZ1wiLFxyXG4gICAgICAgICAgcHVibGlzaGVkQXQ6IHllc3RlcmRheS50b0lTT1N0cmluZygpLFxyXG4gICAgICAgICAgcmVsZXZhbmNlOiAwLjg1XHJcbiAgICAgICAgfVxyXG4gICAgICBdO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGZldGNoIG5ld3MgZGF0YTonLCBlcnJvcik7XHJcbiAgICAgIC8vIFJldHVybiBiYXNpYyBmYWxsYmFjayBkYXRhXHJcbiAgICAgIHJldHVybiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgdGl0bGU6IFwiVGjhu4sgdHLGsOG7nW5nIHTDoGkgY2jDrW5oIOG7lW4gxJHhu4tuaFwiLFxyXG4gICAgICAgICAgY29udGVudDogXCJUaOG7iyB0csaw4budbmcgdMOgaSBjaMOtbmggdHJvbmcgbsaw4bubYyB2w6AgcXXhu5FjIHThur8gxJFhbmcgY8OzIGThuqV1IGhp4buHdSDhu5VuIMSR4buLbmggdMOtY2ggY+G7sWNcIixcclxuICAgICAgICAgIGNhdGVnb3J5OiBcImZpbmFuY2VcIixcclxuICAgICAgICAgIHB1Ymxpc2hlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgICAgICByZWxldmFuY2U6IDAuN1xyXG4gICAgICAgIH1cclxuICAgICAgXTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGFzeW5jIGdldEF2YWlsYWJsZVByb2R1Y3RzKCk6IFByb21pc2U8UHJvZHVjdFtdPiB7XHJcbiAgICAvLyBFbmhhbmNlZCBtb2NrIHByb2R1Y3RzIGRhdGEgd2l0aCBtb3JlIHJlYWxpc3RpYyBpbmZvcm1hdGlvblxyXG4gICAgcmV0dXJuIFtcclxuICAgICAge1xyXG4gICAgICAgIGlkOiBcInZpZXRqZXQtZmxpZ2h0LTAwMVwiLFxyXG4gICAgICAgIG5hbWU6IFwiVmlldEpldCBBaXIgLSBIw6AgTuG7mWkgxJHhur9uIFRQLkhDTSAoS2jhu6kgaOG7k2kpXCIsXHJcbiAgICAgICAgcHJpY2U6IDE1MDAwMDAsXHJcbiAgICAgICAgY2F0ZWdvcnk6IFwiZmxpZ2h0XCIsXHJcbiAgICAgICAgc2VydmljZVR5cGU6IFwidmlldGpldFwiLFxyXG4gICAgICAgIHRva2VuUmV3YXJkOiAxNTAsXHJcbiAgICAgICAgZGlzY291bnQ6IDEwLFxyXG4gICAgICAgIGZlYXR1cmVzOiBbXCJCYWdnYWdlIDIwa2dcIiwgXCJNZWFsIHNlcnZpY2VcIiwgXCJQcmlvcml0eSBib2FyZGluZ1wiLCBcIkZyZWUgY2FuY2VsbGF0aW9uXCJdLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIkNodXnhur9uIGJheSBu4buZaSDEkeG7i2Ega2jhu6kgaOG7k2kgduG7m2kgbmhp4buBdSDGsHUgxJHDo2kgxJHhurdjIGJp4buHdCBjaG8ga2jDoWNoIGjDoG5nIHRow6JuIHRoaeG6v3RcIlxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgaWQ6IFwidmlldGpldC1mbGlnaHQtMDAyXCIsXHJcbiAgICAgICAgbmFtZTogXCJWaWV0SmV0IEFpciAtIEjDoCBO4buZaSDEkeG6v24gU2luZ2Fwb3JlXCIsXHJcbiAgICAgICAgcHJpY2U6IDMyMDAwMDAsXHJcbiAgICAgICAgY2F0ZWdvcnk6IFwiZmxpZ2h0XCIsXHJcbiAgICAgICAgc2VydmljZVR5cGU6IFwidmlldGpldFwiLFxyXG4gICAgICAgIHRva2VuUmV3YXJkOiAzMjAsXHJcbiAgICAgICAgZGlzY291bnQ6IDE1LFxyXG4gICAgICAgIGZlYXR1cmVzOiBbXCJJbnRlcm5hdGlvbmFsIGZsaWdodFwiLCBcIkJhZ2dhZ2UgMzBrZ1wiLCBcIk1lYWwgc2VydmljZVwiLCBcIkVudGVydGFpbm1lbnRcIl0sXHJcbiAgICAgICAgZGVzY3JpcHRpb246IFwiQ2h1eeG6v24gYmF5IHF14buRYyB04bq/IMSR4bq/biBTaW5nYXBvcmUgduG7m2kgZ2nDoSDGsHUgxJHDo2kgxJHhurdjIGJp4buHdFwiXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBpZDogXCJoZGJhbmstcHJlbWl1bS0wMDFcIixcclxuICAgICAgICBuYW1lOiBcIkhEQmFuayBQcmVtaXVtIEFjY291bnQgLSBWSVBcIixcclxuICAgICAgICBwcmljZTogNTAwMDAwLFxyXG4gICAgICAgIGNhdGVnb3J5OiBcImJhbmtpbmdcIixcclxuICAgICAgICBzZXJ2aWNlVHlwZTogXCJoZGJhbmtcIixcclxuICAgICAgICB0b2tlblJld2FyZDogNTAsXHJcbiAgICAgICAgZmVhdHVyZXM6IFtcIkzDo2kgc3XhuqV0IDguNSUvbsSDbVwiLCBcIk1p4buFbiBwaMOtIGNodXnhu4NuIGtob+G6o25cIiwgXCLGr3UgdGnDqm4gZ2lhbyBk4buLY2hcIiwgXCJUxrAgduG6pW4gdMOgaSBjaMOtbmhcIl0sXHJcbiAgICAgICAgZGVzY3JpcHRpb246IFwiVMOgaSBraG/huqNuIHByZW1pdW0gVklQIHbhu5tpIGzDo2kgc3XhuqV0IGNhbyB2w6Agbmhp4buBdSDGsHUgxJHDo2kgxJHhurdjIGJp4buHdFwiXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBpZDogXCJoZGJhbmstcHJlbWl1bS0wMDJcIixcclxuICAgICAgICBuYW1lOiBcIkhEQmFuayBCdXNpbmVzcyBBY2NvdW50XCIsXHJcbiAgICAgICAgcHJpY2U6IDEwMDAwMDAsXHJcbiAgICAgICAgY2F0ZWdvcnk6IFwiYmFua2luZ1wiLFxyXG4gICAgICAgIHNlcnZpY2VUeXBlOiBcImhkYmFua1wiLFxyXG4gICAgICAgIHRva2VuUmV3YXJkOiAxMDAsXHJcbiAgICAgICAgZGlzY291bnQ6IDUsXHJcbiAgICAgICAgZmVhdHVyZXM6IFtcIkJ1c2luZXNzIHN1cHBvcnRcIiwgXCJIaWdoIHRyYW5zYWN0aW9uIGxpbWl0XCIsIFwiTXVsdGktY3VycmVuY3lcIiwgXCIyNC83IHN1cHBvcnRcIl0sXHJcbiAgICAgICAgZGVzY3JpcHRpb246IFwiVMOgaSBraG/huqNuIGRvYW5oIG5naGnhu4dwIHbhu5tpIGjhu5cgdHLhu6Mga2luaCBkb2FuaCB0b8OgbiBkaeG7h25cIlxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgaWQ6IFwic292aWNvLXJlc29ydC0wMDFcIixcclxuICAgICAgICBuYW1lOiBcIlNvdmljbyBSZXNvcnQgLSBQaMO6IFF14buRYyAoMyBuZ8OgeSAyIMSRw6ptKVwiLFxyXG4gICAgICAgIHByaWNlOiAyNTAwMDAwLFxyXG4gICAgICAgIGNhdGVnb3J5OiBcInJlc29ydFwiLFxyXG4gICAgICAgIHNlcnZpY2VUeXBlOiBcInNvdmljb1wiLFxyXG4gICAgICAgIHRva2VuUmV3YXJkOiAyNTAsXHJcbiAgICAgICAgZGlzY291bnQ6IDE1LFxyXG4gICAgICAgIGZlYXR1cmVzOiBbXCJCZWFjaCB2aWV3IHJvb21cIiwgXCJTcGEgc2VydmljZVwiLCBcIkFsbCBpbmNsdXNpdmVcIiwgXCJBaXJwb3J0IHRyYW5zZmVyXCJdLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIkfDs2kgbmdo4buJIGTGsOG7oW5nIGNhbyBj4bqlcCB04bqhaSBQaMO6IFF14buRYyB24bubaSB2aWV3IGJp4buDbiB0dXnhu4d0IMSR4bq5cFwiXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBpZDogXCJzb3ZpY28tcmVzb3J0LTAwMlwiLFxyXG4gICAgICAgIG5hbWU6IFwiU292aWNvIFJlc29ydCAtIMSQw6AgTuG6tW5nICgyIG5nw6B5IDEgxJHDqm0pXCIsXHJcbiAgICAgICAgcHJpY2U6IDE4MDAwMDAsXHJcbiAgICAgICAgY2F0ZWdvcnk6IFwicmVzb3J0XCIsXHJcbiAgICAgICAgc2VydmljZVR5cGU6IFwic292aWNvXCIsXHJcbiAgICAgICAgdG9rZW5SZXdhcmQ6IDE4MCxcclxuICAgICAgICBkaXNjb3VudDogMjAsXHJcbiAgICAgICAgZmVhdHVyZXM6IFtcIk1vdW50YWluIHZpZXdcIiwgXCJHb2xmIGNvdXJzZVwiLCBcIkZpbmUgZGluaW5nXCIsIFwiQ3VsdHVyYWwgdG91clwiXSxcclxuICAgICAgICBkZXNjcmlwdGlvbjogXCJHw7NpIG5naOG7iSBkxrDhu6FuZyB04bqhaSDEkMOgIE7hurVuZyB24bubaSB0cuG6o2kgbmdoaeG7h20gdsSDbiBow7NhIMSR4bq3YyBz4bqvY1wiXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBpZDogXCJ2aWtraWJhbmstZGlnaXRhbC0wMDFcIixcclxuICAgICAgICBuYW1lOiBcIlZpa2tpYmFuayBEaWdpdGFsIEJhbmtpbmcgUHJvXCIsXHJcbiAgICAgICAgcHJpY2U6IDMwMDAwMCxcclxuICAgICAgICBjYXRlZ29yeTogXCJiYW5raW5nXCIsXHJcbiAgICAgICAgc2VydmljZVR5cGU6IFwidmlra2liYW5rXCIsXHJcbiAgICAgICAgdG9rZW5SZXdhcmQ6IDMwLFxyXG4gICAgICAgIGZlYXR1cmVzOiBbXCJBSSBhc3Npc3RhbnRcIiwgXCJTbWFydCBidWRnZXRpbmdcIiwgXCJJbnZlc3RtZW50IGFkdmljZVwiLCBcIkJpb21ldHJpYyBzZWN1cml0eVwiXSxcclxuICAgICAgICBkZXNjcmlwdGlvbjogXCJE4buLY2ggduG7pSBuZ8OibiBow6BuZyBz4buRIHRo4bq/IGjhu4cgbeG7m2kgduG7m2kgQUkgdsOgIG1hY2hpbmUgbGVhcm5pbmdcIlxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgaWQ6IFwibWFya2V0cGxhY2UtZWxlY3Ryb25pY3MtMDAxXCIsXHJcbiAgICAgICAgbmFtZTogXCJpUGhvbmUgMTUgUHJvIE1heCAyNTZHQlwiLFxyXG4gICAgICAgIHByaWNlOiAzNTAwMDAwMCxcclxuICAgICAgICBjYXRlZ29yeTogXCJlbGVjdHJvbmljc1wiLFxyXG4gICAgICAgIHNlcnZpY2VUeXBlOiBcIm1hcmtldHBsYWNlXCIsXHJcbiAgICAgICAgdG9rZW5SZXdhcmQ6IDM1MDAsXHJcbiAgICAgICAgZGlzY291bnQ6IDgsXHJcbiAgICAgICAgZmVhdHVyZXM6IFtcIkxhdGVzdCBtb2RlbFwiLCBcIjI1NkdCIHN0b3JhZ2VcIiwgXCJQcm8gY2FtZXJhXCIsIFwiNUcgc3VwcG9ydFwiXSxcclxuICAgICAgICBkZXNjcmlwdGlvbjogXCLEkGnhu4duIHRob+G6oWkgdGjDtG5nIG1pbmggY2FvIGPhuqVwIHbhu5tpIGNhbWVyYSBjaHV5w6puIG5naGnhu4dwXCJcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIGlkOiBcIm1hcmtldHBsYWNlLWVsZWN0cm9uaWNzLTAwMlwiLFxyXG4gICAgICAgIG5hbWU6IFwiTWFjQm9vayBQcm8gTTMgMTQtaW5jaFwiLFxyXG4gICAgICAgIHByaWNlOiA0NTAwMDAwMCxcclxuICAgICAgICBjYXRlZ29yeTogXCJlbGVjdHJvbmljc1wiLFxyXG4gICAgICAgIHNlcnZpY2VUeXBlOiBcIm1hcmtldHBsYWNlXCIsXHJcbiAgICAgICAgdG9rZW5SZXdhcmQ6IDQ1MDAsXHJcbiAgICAgICAgZGlzY291bnQ6IDEyLFxyXG4gICAgICAgIGZlYXR1cmVzOiBbXCJNMyBjaGlwXCIsIFwiMTQtaW5jaCBkaXNwbGF5XCIsIFwiMTZHQiBSQU1cIiwgXCI1MTJHQiBTU0RcIl0sXHJcbiAgICAgICAgZGVzY3JpcHRpb246IFwiTGFwdG9wIGNodXnDqm4gbmdoaeG7h3AgduG7m2kgY2hpcCBNMyBt4bubaSBuaOG6pXRcIlxyXG4gICAgICB9XHJcbiAgICBdO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGFpUGVyc29uYWxpemF0aW9uU2VydmljZSA9IG5ldyBBSVBlcnNvbmFsaXphdGlvblNlcnZpY2UoKTtcclxuIl0sIm5hbWVzIjpbIkFJUGVyc29uYWxpemF0aW9uU2VydmljZSIsImdldFBlcnNvbmFsaXplZFJlY29tbWVuZGF0aW9ucyIsInVzZXJQcm9maWxlIiwibmV3c0l0ZW1zIiwiYXZhaWxhYmxlUHJvZHVjdHMiLCJwcm9tcHQiLCJidWlsZFBlcnNvbmFsaXphdGlvblByb21wdCIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImZldGNoIiwiYmFzZVVybCIsImFwaUtleSIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImNvbnRlbnRzIiwicGFydHMiLCJ0ZXh0IiwiZ2VuZXJhdGlvbkNvbmZpZyIsInRlbXBlcmF0dXJlIiwidG9wSyIsInRvcFAiLCJtYXhPdXRwdXRUb2tlbnMiLCJzYWZldHlTZXR0aW5ncyIsImNhdGVnb3J5IiwidGhyZXNob2xkIiwib2siLCJlcnJvclRleHQiLCJlcnJvciIsIkVycm9yIiwic3RhdHVzIiwiZGF0YSIsImpzb24iLCJjYW5kaWRhdGVzIiwiY29udGVudCIsImFpUmVzcG9uc2UiLCJwYXJzZUFJUmVzcG9uc2UiLCJnZXRGYWxsYmFja1JlY29tbWVuZGF0aW9ucyIsIm5ld3NDb250ZXh0IiwibWFwIiwiaXRlbSIsInRpdGxlIiwic3Vic3RyaW5nIiwicmVsZXZhbmNlIiwiam9pbiIsInByb2R1Y3RzQ29udGV4dCIsInByb2R1Y3QiLCJpZCIsIm5hbWUiLCJwcmljZSIsInNlcnZpY2VUeXBlIiwidG9rZW5SZXdhcmQiLCJkaXNjb3VudCIsImZlYXR1cmVzIiwiZGVzY3JpcHRpb24iLCJ0cmFuc2FjdGlvbkhpc3RvcnkiLCJzbGljZSIsInR4IiwidHlwZSIsImFtb3VudCIsInJhbmsiLCJtZW1iZXJzaGlwVGllciIsInRvdGFsUG9pbnRzIiwidG90YWxFYXJuZWQiLCJ0b3RhbFNwZW50IiwiY3VycmVudEJhbGFuY2UiLCJpc0F0aGVuYVByaW1lIiwicHJlZmVyZW5jZXMiLCJqc29uTWF0Y2giLCJtYXRjaCIsImNvZGVCbG9ja01hdGNoIiwianNvblN0cmluZyIsInBhcnNlZCIsInBhcnNlIiwicmVjb21tZW5kYXRpb25zIiwicmVjIiwiZmluZCIsInAiLCJwcm9kdWN0SWQiLCJ3YXJuIiwicmVhc29uIiwidG9rZW5PcHRpbWl6YXRpb24iLCJ1cmdlbmN5IiwiY29uZmlkZW5jZSIsInBlcnNvbmFsaXplZE1lc3NhZ2UiLCJleHBlY3RlZFRva2VucyIsInJvaSIsImZpbHRlciIsIkJvb2xlYW4iLCJ0aWVyTXVsdGlwbGllciIsImdldFRpZXJNdWx0aXBsaWVyIiwic29ydCIsImEiLCJiIiwidGllciIsInRvTG93ZXJDYXNlIiwiZ2V0TmV3c0FuYWx5c2lzIiwiY3VycmVudERhdGUiLCJEYXRlIiwieWVzdGVyZGF5IiwiZ2V0VGltZSIsInB1Ymxpc2hlZEF0IiwidG9JU09TdHJpbmciLCJnZXRBdmFpbGFibGVQcm9kdWN0cyIsImFpUGVyc29uYWxpemF0aW9uU2VydmljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/aiPersonalizationService.ts\n"));

/***/ })

});